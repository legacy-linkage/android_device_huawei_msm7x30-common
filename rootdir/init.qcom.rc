# Copyright (c) 2009-2012, Code Aurora Forum. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Code Aurora nor
#       the names of its contributors may be used to endorse or promote
#       products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import init.qcom.usb.rc

on early-init
    mount debugfs debugfs /sys/kernel/debug
    chown system system /sys/kernel/debug/kgsl/proc

on init
    # See storage config details at http://source.android.com/tech/storage/
    mkdir /mnt/media_rw/sdcard0 0755 media_rw media_rw
    mkdir /storage/sdcard0 0700 root root

    mkdir /mnt/media_rw/sdcard1 0755 media_rw media_rw
    mkdir /storage/sdcard1 0700 root root

    mkdir /mnt/media_rw/usbdisk0 0755 media_rw media_rw
    mkdir /storage/usbdisk0 0700 root root

    export EXTERNAL_STORAGE /storage/sdcard0
    export SECONDARY_STORAGE /storage/sdcard1

    symlink /storage/sdcard0 /sdcard
    symlink /storage/sdcard0 /mnt/sdcard

    # Set up the BFQIO hierarchy
    chmod 0755 /sys/fs/cgroup
    mkdir /sys/fs/cgroup/bfqio 0755 root system
    mount cgroup none /sys/fs/cgroup/bfqio bfqio
    chown root system /sys/fs/cgroup/bfqio/tasks
    chmod 0666 /sys/fs/cgroup/bfqio/tasks

    # Soft realtime class for display service
    mkdir /sys/fs/cgroup/bfqio/rt-display 0755 root system
    write /sys/fs/cgroup/bfqio/rt-display/bfqio.ioprio_class 1
    write /sys/fs/cgroup/bfqio/rt-display/bfqio.ioprio 7
    chown system system /sys/fs/cgroup/bfqio/rt-display/tasks
    chmod 0664 /sys/fs/cgroup/bfqio/rt-display/tasks

on fs
    write /sys/block/zram0/comp_algorithm lz4

    # Scan for LVM physical volumes and set up volume groups
    exec /sbin/lvm vgscan --mknodes --ignorelockingfailure
    # Activate LVM logical volumes in found volume groups
    exec /sbin/lvm vgchange -aly --ignorelockingfailure
    # Set up partitions
    exec /sbin/static/busybox sh /init.fs.sh

    mkdir /cust
    mount_all ./fstab.qcom
    swapon_all ./fstab.qcom

on early-boot
    # set RLIMIT_MEMLOCK to 64MB
    setrlimit 8 67108864 67108864

on boot
    # Set brightness for LCD and buttons
    write /sys/class/leds/lcd-backlight/brightness 127
    write /sys/class/leds/button-backlight/brightness 127

    chown bluetooth bluetooth /sys/class/rfkill/rfkill0/type
    chmod 0660 /sys/class/rfkill/rfkill0/type
    chown bluetooth bluetooth /sys/class/rfkill/rfkill0/state
    chmod 0660 /sys/class/rfkill/rfkill0/state

    chown system system /sys/class/leds/flashlight/brightness
    chmod 0666 /sys/class/leds/flashlight/brightness

    chmod 0444 /sys/devices/platform/msm_hsusb/gadget/usb_state

    chmod 0444 /proc/cmdline

    #To allow interfaces to get v6 address when tethering is enabled
    write /proc/sys/net/ipv6/conf/rmnet0/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet1/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet2/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet3/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet4/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet5/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet6/accept_ra 2
    write /proc/sys/net/ipv6/conf/rmnet7/accept_ra 2

    chown system system /sys/class/leds/red/device/lock

    # Hardware tunables
    chown system system /sys/class/timed_output/vibrator/voltage_level
    chmod 0664 /sys/class/timed_output/vibrator/voltage_level
    restorecon /sys/class/timed_output/vibrator/voltage_level
    chown system system /sys/class/graphics/fb0/cabc
    chmod 0664 /sys/class/graphics/fb0/cabc
    restorecon /sys/class/graphics/fb0/cabc
    chown system system /sys/class/graphics/fb0/kcal
    chmod 0664 /sys/class/graphics/fb0/kcal
    restorecon /sys/class/graphics/fb0/kcal

    write /proc/sys/vm/page-cluster 0

    # For setting tcp delayed ack
    chown system system /sys/kernel/ipv4/tcp_delack_seg
    chown system system /sys/kernel/ipv4/tcp_use_userconfig

    # Define TCP delayed ack settings for WiFi & LTE
    setprop net.tcp.delack.default     1
    setprop net.tcp.delack.wifi        20
    setprop net.tcp.delack.lte         8
    setprop net.tcp.usercfg.default    0
    setprop net.tcp.usercfg.wifi       1
    setprop net.tcp.usercfg.lte        1

    # Flash storage isn't a good entropy source, and only causes locking
    # overhead in the kernel. Turn it off.
    write /sys/block/mmcblk0/queue/add_random 0
    write /sys/block/mmcblk1/queue/add_random 0

    # Read ahead buffer
    write /sys/block/mmcblk0/queue/read_ahead_kb 512
    write /sys/block/mmcblk1/queue/read_ahead_kb 512

    # Huawei Settings
    chown system system /sys/devices/platform/msm_otg/mode
    chown system system /sys/devices/platform/msm_otg/manual_chg

    # HW Props
    chown system system /sys/hwprops/btmac
    chown system system /sys/hwprops/wlanmac
    chown system system /sys/hwprops/reset

# msm specific files that need to be created on /data
on post-fs-data
    chmod 0664 /sys/devices/platform/msm_sdcc.2/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.3/polling
    chmod 0664 /sys/devices/platform/msm_sdcc.4/polling

    # Chown polling nodes as needed from UI running on system server
    chown system system /sys/devices/platform/msm_sdcc.2/polling
    chown system system /sys/devices/platform/msm_sdcc.3/polling
    chown system system /sys/devices/platform/msm_sdcc.4/polling

    mkdir /data/system 0775 system system

    # HW Props
    mkdir /data/misc/hwprops 0770 system system

    setprop vold.post_fs_data_done 1

on property:init.svc.wpa_supplicant=stopped
    stop dhcpcd

service rmt_storage /system/bin/rmt_storage
    class core
    user root
    group system

service rmt_oeminfo /system/bin/rmt_oeminfo
    class core
    user root
    group system

# QMUX must be in multiple groups to support external process connections
service qmuxd /system/bin/qmuxd
    class main
    user radio
    group radio audio bluetooth gps

service netmgrd /system/bin/netmgrd
    class main
    group radio

service wpa_supplicant /system/bin/wpa_supplicant \
    -iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
    -I/system/etc/wifi/wpa_supplicant_overlay.conf \
    -O/data/misc/wifi/sockets \
    -e/data/misc/wifi/entropy.bin -g@android:wpa_wlan0
    #   we will start as root and wpa_supplicant will switch to user wifi
    #   after setting up the capabilities required for WEXT
    #   user wifi
    #   group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot

service p2p_supplicant /system/bin/wpa_supplicant \
    -ip2p0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf \
    -I/system/etc/wifi/p2p_supplicant_overlay.conf -N \
    -iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
    -I/system/etc/wifi/wpa_supplicant_overlay.conf \
    -O/data/misc/wifi/sockets -puse_p2p_group_interface=1 \
    -e/data/misc/wifi/entropy.bin -g@android:wpa_wlan0
    #   we will start as root and wpa_supplicant will switch to user wifi
    #   after setting up the capabilities required for WEXT
    #   user wifi
    #   group wifi inet keystore
    class main
    socket wpa_wlan0 dgram 660 wifi wifi
    disabled
    oneshot

service dhcpcd_wlan0 /system/bin/dhcpcd -aABDKL
    class main
    disabled
    oneshot

service dhcpcd_p2p /system/bin/dhcpcd -aABKL
    class main
    disabled
    oneshot

service iprenew_wlan0 /system/bin/dhcpcd -n
    class main
    disabled
    oneshot

service iprenew_p2p /system/bin/dhcpcd -n
    class main
    disabled
    oneshot

service dhcpcd_bt-pan /system/bin/dhcpcd -BKLG
    disabled
    oneshot

service iprenew_bt-pan /system/bin/dhcpcd -n
    disabled
    oneshot

service fm_dl /system/bin/sh /system/etc/init.qcom.fm.sh
    class late_start
    user root
    group system qcom_oncrpc
    disabled
    oneshot

service fuse_sdcard0 /system/bin/sdcard -u 1023 -g 1023 -d /mnt/media_rw/sdcard0 /storage/sdcard0
    class late_start
    disabled

service fuse_sdcard1 /system/bin/sdcard -u 1023 -g 1023 -d /mnt/media_rw/sdcard1 /storage/sdcard1
    class late_start
    disabled

service fuse_usbdisk0 /system/bin/sdcard -u 1023 -g 1023 /mnt/media_rw/usbdisk0 /storage/usbdisk0
    class late_start
    disabled

service hwprops /system/bin/hwprops
    class main
    oneshot

# Configure IO scheduler
on property:sys.io.scheduler=*
    write /sys/block/mmcblk0/queue/scheduler ${sys.io.scheduler}
    write /sys/block/mmcblk1/queue/scheduler ${sys.io.scheduler}

on property:persist.sys.io.scheduler=*
    setprop sys.io.scheduler ${persist.sys.io.scheduler}

# Set slice_idle to 0 for CFQ
on property:sys.io.scheduler=cfq
    write /sys/block/mmcblk0/queue/iosched/slice_idle 0
    write /sys/block/mmcblk1/queue/iosched/slice_idle 0

# Set slice_idle to 0 for BFQ
on property:sys.io.scheduler=bfq
    write /sys/block/mmcblk0/queue/iosched/slice_idle 0
    write /sys/block/mmcblk1/queue/iosched/slice_idle 0
